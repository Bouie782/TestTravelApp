{"ast":null,"code":"import _slicedToArray from \"/Users/Bouie/Desktop/Pokemon21Questions/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Bouie/Desktop/Pokemon21Questions/src/components/getPlace.js\";\nimport React, { useState } from 'react';\nimport \"bootstrap/https://maps.googleapis.com/maps/api/js\";\n//   url: https://maps.googleapis.com/maps/api/place/textsearch/json?query=[yourquerystring]&key=[YOURAPIKEY]\n\nvar map;\nvar service;\nvar infowindow;\nvar loc;\nfunction initialize() {\n  var location = new window.google.maps.LatLng(-33.8665433, 151.1956316);\n  map = new window.google.maps.Map(document.getElementById('map'), {\n    center: pyrmont,\n    zoom: 15\n  });\n}\nfunction GetPlace(props) {\n  //   const gmapikey = \"AIzaSyCnTuvtwFKq21_w9gpZgcPKOFsX6FVQi0I\";\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    places = _useState2[0],\n    setPlaces = _useState2[1];\n  initialize();\n  function getNewPlace() {\n    var request = {\n      location: loc,\n      radius: '500',\n      query: 'restaurant'\n    };\n    service = new window.google.maps.places.PlacesService(map);\n    service.textSearch(request, callback);\n  }\n  function callback(results, status) {\n    if (status == window.google.maps.places.PlacesServiceStatus.OK) {\n      console.log(results);\n      setPlaces(results);\n    }\n  }\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: getNewPlace,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 15\n    }\n  }, \"Get new Place\")));\n}\nexport default GetPlace;","map":{"version":3,"names":["React","useState","map","service","infowindow","loc","initialize","location","window","google","maps","LatLng","Map","document","getElementById","center","pyrmont","zoom","GetPlace","props","_useState","_useState2","_slicedToArray","places","setPlaces","getNewPlace","request","radius","query","PlacesService","textSearch","callback","results","status","PlacesServiceStatus","OK","console","log","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onClick"],"sources":["/Users/Bouie/Desktop/Pokemon21Questions/src/components/getPlace.js"],"sourcesContent":["import React, {useState } from 'react';\nimport \"bootstrap/https://maps.googleapis.com/maps/api/js\";\n//   url: https://maps.googleapis.com/maps/api/place/textsearch/json?query=[yourquerystring]&key=[YOURAPIKEY]\n\nvar map;\nvar service;\nvar infowindow;\nvar loc\n\nfunction initialize() {\n    var location = new window.google.maps.LatLng(-33.8665433,151.1956316);\n\n    map = new window.google.maps.Map(document.getElementById('map'), {\n        center: pyrmont,\n        zoom: 15\n    });\n}\n\nfunction GetPlace(props) {\n\n//   const gmapikey = \"AIzaSyCnTuvtwFKq21_w9gpZgcPKOFsX6FVQi0I\";\n\n    const [places, setPlaces] = useState(\"\");\n\n\n\n    initialize();\n\n    function getNewPlace(){\n        var request = {\n        location: loc,\n        radius: '500',\n        query: 'restaurant'\n        };\n    \n        service = new window.google.maps.places.PlacesService(map);\n        service.textSearch(request, callback);\n    }\n    \n    \n    function callback(results, status) {\n        if (status == window.google.maps.places.PlacesServiceStatus.OK) {\n            console.log(results)\n            setPlaces(results);\n        }\n    }\n\n  return (\n    <div>\n      <header>\n              <button onClick={getNewPlace}>\n                Get new Place\n              </button>\n      </header>\n    </div>\n  );\n}\n\nexport default GetPlace;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAQ,OAAO;AACtC,OAAO,mDAAmD;AAC1D;;AAEA,IAAIC,GAAG;AACP,IAAIC,OAAO;AACX,IAAIC,UAAU;AACd,IAAIC,GAAG;AAEP,SAASC,UAAUA,CAAA,EAAG;EAClB,IAAIC,QAAQ,GAAG,IAAIC,MAAM,CAACC,MAAM,CAACC,IAAI,CAACC,MAAM,CAAC,CAAC,UAAU,EAAC,WAAW,CAAC;EAErET,GAAG,GAAG,IAAIM,MAAM,CAACC,MAAM,CAACC,IAAI,CAACE,GAAG,CAACC,QAAQ,CAACC,cAAc,CAAC,KAAK,CAAC,EAAE;IAC7DC,MAAM,EAAEC,OAAO;IACfC,IAAI,EAAE;EACV,CAAC,CAAC;AACN;AAEA,SAASC,QAAQA,CAACC,KAAK,EAAE;EAEzB;EAAA,IAAAC,SAAA,GAEgCnB,QAAQ,CAAC,EAAE,CAAC;IAAAoB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAjCG,MAAM,GAAAF,UAAA;IAAEG,SAAS,GAAAH,UAAA;EAIxBf,UAAU,EAAE;EAEZ,SAASmB,WAAWA,CAAA,EAAE;IAClB,IAAIC,OAAO,GAAG;MACdnB,QAAQ,EAAEF,GAAG;MACbsB,MAAM,EAAE,KAAK;MACbC,KAAK,EAAE;IACP,CAAC;IAEDzB,OAAO,GAAG,IAAIK,MAAM,CAACC,MAAM,CAACC,IAAI,CAACa,MAAM,CAACM,aAAa,CAAC3B,GAAG,CAAC;IAC1DC,OAAO,CAAC2B,UAAU,CAACJ,OAAO,EAAEK,QAAQ,CAAC;EACzC;EAGA,SAASA,QAAQA,CAACC,OAAO,EAAEC,MAAM,EAAE;IAC/B,IAAIA,MAAM,IAAIzB,MAAM,CAACC,MAAM,CAACC,IAAI,CAACa,MAAM,CAACW,mBAAmB,CAACC,EAAE,EAAE;MAC5DC,OAAO,CAACC,GAAG,CAACL,OAAO,CAAC;MACpBR,SAAS,CAACQ,OAAO,CAAC;IACtB;EACJ;EAEF,oBACEhC,KAAA,CAAAsC,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACE5C,KAAA,CAAAsC,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACQ5C,KAAA,CAAAsC,aAAA;IAAQO,OAAO,EAAEpB,WAAY;IAAAc,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,eAE9B,CAAS,CACR,CACL;AAEV;AAEA,eAAe1B,QAAQ"},"metadata":{},"sourceType":"module"}